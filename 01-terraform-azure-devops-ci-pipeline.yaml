# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

parameters:
  - name: inputName
    displayName: Tell me your name
    type: string
stages:
  - stage: Build
    displayName: Build Stage
    jobs:
      - job: Build
        displayName: Build Job
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          ## Publish Artifacts pipeline code in addition to Build and Push
          - script: echo $(parameters.inputName) "Triggered the Pipeline"
            displayName: "Print message from automatically created Pipeline"
          - bash: echo Contents in System Default Working Directory; ls -R $(System.DefaultWorkingDirectory)/terraform-manifest
          - bash: echo Before copying Contents in Build Artifact Directory; ls -R $(Build.StagingDirectory)
          # Task-1: Copy files (Copy files from a source folder to target folder)
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'
              Contents: '**'
              TargetFolder: '$(Build.StagingDirectory)'
              OverWrite: true
          # List files from Build Artifact Staging Directory - After Copy
          - bash: echo After copying Contents in Build Artifact Directory; ls -R $(Build.StagingDirectory)
          - bash: echo Checking another folder Contents in Build Artifact Directory; ls -R $(Build.ArtifactStagingDirectory)
          # Task - 2: Publish the Artifacts 
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'terraform-manifests'
              publishLocation: 'Container'
